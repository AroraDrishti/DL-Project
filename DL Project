{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "e88d7e49",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2023-07-07T09:39:39.698280Z",
     "iopub.status.busy": "2023-07-07T09:39:39.697864Z",
     "iopub.status.idle": "2023-07-07T09:40:20.783266Z",
     "shell.execute_reply": "2023-07-07T09:40:20.781802Z"
    },
    "papermill": {
     "duration": 41.099253,
     "end_time": "2023-07-07T09:40:20.786310",
     "exception": false,
     "start_time": "2023-07-07T09:39:39.687057",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import torch\n",
    "import torchvision.transforms as transforms\n",
    "from torch.utils.data import Dataset\n",
    "from torchvision.datasets import ImageFolder\n",
    "from PIL import Image\n",
    "\n",
    "class CustomDataset(Dataset):\n",
    "    def __init__(self, folder_path):\n",
    "        self.data = ImageFolder(folder_path)\n",
    "\n",
    "    def __getitem__(self, index):\n",
    "        x, y = self.data[index]\n",
    "        return x, y\n",
    "\n",
    "    def __len__(self):\n",
    "        return len(self.data)\n",
    "\n",
    "# Define the paths to your train and test folders\n",
    "train_folder = '/kaggle/input/skin-cancer-malignant-vs-benign/train/'\n",
    "test_folder = '/kaggle/input/skin-cancer-malignant-vs-benign/test/'\n",
    "\n",
    "# Define transformations for the dataset\n",
    "transform = transforms.Compose([\n",
    "    transforms.Resize((64, 64)),  # Resize the images to a consistent size\n",
    "    transforms.ToTensor(),\n",
    "    transforms.Normalize(mean=[0.5, 0.5, 0.5], std=[0.5, 0.5, 0.5])  # Normalize the image tensors\n",
    "])\n",
    "\n",
    "# Create train and test datasets\n",
    "train_dataset = CustomDataset(train_folder)\n",
    "test_dataset = CustomDataset(test_folder)\n",
    "\n",
    "# Create separate lists for inputs (images) and labels\n",
    "x_train = []\n",
    "y_train = []\n",
    "for data in train_dataset:\n",
    "    image, label = data\n",
    "    image = transform(image)  # Apply transform here\n",
    "    x_train.append(image)\n",
    "    y_train.append(label)\n",
    "\n",
    "x_test = []\n",
    "y_test = []\n",
    "for data in test_dataset:\n",
    "    image, label = data\n",
    "    image = transform(image)  # Apply transform here\n",
    "    x_test.append(image)\n",
    "    y_test.append(label)\n",
    "\n",
    "# Convert the lists to tensors\n",
    "x_train = torch.stack(x_train)\n",
    "y_train = torch.tensor(y_train)\n",
    "x_test = torch.stack(x_test)\n",
    "y_test = torch.tensor(y_test)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "2a086c47",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-07-07T09:40:20.804418Z",
     "iopub.status.busy": "2023-07-07T09:40:20.803408Z",
     "iopub.status.idle": "2023-07-07T09:40:20.810781Z",
     "shell.execute_reply": "2023-07-07T09:40:20.809652Z"
    },
    "papermill": {
     "duration": 0.018834,
     "end_time": "2023-07-07T09:40:20.813342",
     "exception": false,
     "start_time": "2023-07-07T09:40:20.794508",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "torch.Size([2637, 3, 64, 64])\n",
      "torch.Size([660, 3, 64, 64])\n",
      "torch.Size([2637])\n",
      "torch.Size([660])\n"
     ]
    }
   ],
   "source": [
    "print(x_train.shape)\n",
    "print(x_test.shape)\n",
    "print(y_train.shape)\n",
    "print(y_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "4f5f15a9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-07-07T09:40:20.830139Z",
     "iopub.status.busy": "2023-07-07T09:40:20.829416Z",
     "iopub.status.idle": "2023-07-07T09:40:29.825363Z",
     "shell.execute_reply": "2023-07-07T09:40:29.823798Z"
    },
    "papermill": {
     "duration": 9.008054,
     "end_time": "2023-07-07T09:40:29.828580",
     "exception": false,
     "start_time": "2023-07-07T09:40:20.820526",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/skimage/feature/texture.py:353: UserWarning: Applying `local_binary_pattern` to floating-point images may give unexpected results when small numerical differences between adjacent pixels are present. It is recommended to use this function with images of integer dtype.\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "from skimage.feature import local_binary_pattern\n",
    "from skimage.color import rgb2gray\n",
    "\n",
    "# Define the LBP parameters\n",
    "radius = 3\n",
    "n_points = 8 * radius\n",
    "\n",
    "# Initialize lists to store the LBP features\n",
    "lbp_train = []\n",
    "lbp_test = []\n",
    "\n",
    "# Extract LBP features from x_train\n",
    "for image in x_train:\n",
    "    # Convert the tensor to a NumPy array and then to grayscale\n",
    "    image_np = image.permute(1, 2, 0).numpy()\n",
    "    image_gray = rgb2gray(image_np)\n",
    "\n",
    "    # Compute LBP features\n",
    "    lbp = local_binary_pattern(image_gray, n_points, radius, method='uniform')\n",
    "\n",
    "    # Flatten the LBP features and append to the list\n",
    "    lbp_train.append(lbp.flatten())\n",
    "\n",
    "# Extract LBP features from x_test\n",
    "for image in x_test:\n",
    "    # Convert the tensor to a NumPy array and then to grayscale\n",
    "    image_np = image.permute(1, 2, 0).numpy()\n",
    "    image_gray = rgb2gray(image_np)\n",
    "\n",
    "    # Compute LBP features\n",
    "    lbp = local_binary_pattern(image_gray, n_points, radius, method='uniform')\n",
    "\n",
    "    # Flatten the LBP features and append to the list\n",
    "    lbp_test.append(lbp.flatten())\n",
    "\n",
    "# Convert the LBP feature lists to NumPy arrays\n",
    "lbp_train = np.array(lbp_train)\n",
    "lbp_test = np.array(lbp_test)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c9c93456",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-07-07T09:40:29.846400Z",
     "iopub.status.busy": "2023-07-07T09:40:29.845290Z",
     "iopub.status.idle": "2023-07-07T09:41:58.036393Z",
     "shell.execute_reply": "2023-07-07T09:41:58.035318Z"
    },
    "papermill": {
     "duration": 88.203502,
     "end_time": "2023-07-07T09:41:58.039676",
     "exception": false,
     "start_time": "2023-07-07T09:40:29.836174",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.\n",
      "  warnings.warn(msg)\n",
      "Downloading: \"https://download.pytorch.org/models/resnet50-0676ba61.pth\" to /root/.cache/torch/hub/checkpoints/resnet50-0676ba61.pth\n",
      "100%|██████████| 97.8M/97.8M [00:00<00:00, 218MB/s]\n"
     ]
    }
   ],
   "source": [
    "import torch\n",
    "import torchvision.transforms as transforms\n",
    "from torchvision.models import resnet50\n",
    "from PIL import Image\n",
    "\n",
    "# Load the pre-trained ResNet-50 model\n",
    "resnet = resnet50(pretrained=True)\n",
    "resnet.eval()\n",
    "\n",
    "# Define the preprocessing transform\n",
    "preprocess = transforms.Compose([\n",
    "    transforms.Resize(64),\n",
    "    #transforms.CenterCrop(224),\n",
    "    transforms.ToTensor(),\n",
    "    transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])\n",
    "])\n",
    "\n",
    "# Initialize lists to store the extracted features\n",
    "resnet_features_train = []\n",
    "resnet_features_test = []\n",
    "\n",
    "# Extract features from x_train using ResNet-50\n",
    "for image in x_train:\n",
    "    # Convert the tensor image to PIL Image\n",
    "    image = transforms.functional.to_pil_image(image)\n",
    "\n",
    "    # Preprocess the image\n",
    "    input_tensor = preprocess(image)\n",
    "    input_batch = input_tensor.unsqueeze(0)\n",
    "\n",
    "    # Use ResNet-50 to extract features\n",
    "    with torch.no_grad():\n",
    "        features = resnet(input_batch)\n",
    "\n",
    "    # Convert the features to a 1D tensor and append to the list\n",
    "    features = torch.flatten(features)\n",
    "    resnet_features_train.append(features)\n",
    "\n",
    "# Extract features from x_test using ResNet-50\n",
    "for image in x_test:\n",
    "    # Convert the tensor image to PIL Image\n",
    "    image = transforms.functional.to_pil_image(image)\n",
    "\n",
    "    # Preprocess the image\n",
    "    input_tensor = preprocess(image)\n",
    "    input_batch = input_tensor.unsqueeze(0)\n",
    "\n",
    "    # Use ResNet-50 to extract features\n",
    "    with torch.no_grad():\n",
    "        features = resnet(input_batch)\n",
    "\n",
    "    # Convert the features to a 1D tensor and append to the list\n",
    "    features = torch.flatten(features)\n",
    "    resnet_features_test.append(features)\n",
    "\n",
    "# Convert the feature lists to tensors\n",
    "resnet_features_train = torch.stack(resnet_features_train)\n",
    "resnet_features_test = torch.stack(resnet_features_test)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "3c678fb4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-07-07T09:41:58.063046Z",
     "iopub.status.busy": "2023-07-07T09:41:58.062189Z",
     "iopub.status.idle": "2023-07-07T09:43:52.871831Z",
     "shell.execute_reply": "2023-07-07T09:43:52.870452Z"
    },
    "papermill": {
     "duration": 114.822997,
     "end_time": "2023-07-07T09:43:52.874885",
     "exception": false,
     "start_time": "2023-07-07T09:41:58.051888",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=VGG16_Weights.IMAGENET1K_V1`. You can also use `weights=VGG16_Weights.DEFAULT` to get the most up-to-date weights.\n",
      "  warnings.warn(msg)\n",
      "Downloading: \"https://download.pytorch.org/models/vgg16-397923af.pth\" to /root/.cache/torch/hub/checkpoints/vgg16-397923af.pth\n",
      "100%|██████████| 528M/528M [00:02<00:00, 219MB/s]\n"
     ]
    }
   ],
   "source": [
    "import torch\n",
    "import torchvision.transforms as transforms\n",
    "from torchvision.models import vgg16\n",
    "from PIL import Image\n",
    "\n",
    "# Load the pre-trained VGG16 model\n",
    "vgg = vgg16(pretrained=True)\n",
    "vgg.eval()\n",
    "\n",
    "# Define the preprocessing transform\n",
    "preprocess = transforms.Compose([\n",
    "    transforms.Resize(64),\n",
    "    #transforms.CenterCrop(224),\n",
    "    transforms.ToTensor(),\n",
    "    transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])\n",
    "])\n",
    "\n",
    "# Initialize lists to store the extracted features\n",
    "vgg_features_train = []\n",
    "vgg_features_test = []\n",
    "\n",
    "# Extract features from x_train using VGG16\n",
    "for image in x_train:\n",
    "    # Convert the tensor image to PIL Image\n",
    "    image = transforms.functional.to_pil_image(image)\n",
    "\n",
    "    # Preprocess the image\n",
    "    input_tensor = preprocess(image)\n",
    "    input_batch = input_tensor.unsqueeze(0)\n",
    "\n",
    "    # Use VGG16 to extract features\n",
    "    with torch.no_grad():\n",
    "        features = vgg.features(input_batch)\n",
    "\n",
    "    # Convert the features to a 1D tensor and append to the list\n",
    "    features = torch.flatten(features)\n",
    "    vgg_features_train.append(features)\n",
    "\n",
    "# Extract features from x_test using VGG16\n",
    "for image in x_test:\n",
    "    # Convert the tensor image to PIL Image\n",
    "    image = transforms.functional.to_pil_image(image)\n",
    "\n",
    "    # Preprocess the image\n",
    "    input_tensor = preprocess(image)\n",
    "    input_batch = input_tensor.unsqueeze(0)\n",
    "\n",
    "    # Use VGG16 to extract features\n",
    "    with torch.no_grad():\n",
    "        features = vgg.features(input_batch)\n",
    "\n",
    "    # Convert the features to a 1D tensor and append to the list\n",
    "    features = torch.flatten(features)\n",
    "    vgg_features_test.append(features)\n",
    "\n",
    "# Convert the feature lists to tensors\n",
    "vgg_features_train = torch.stack(vgg_features_train)\n",
    "vgg_features_test = torch.stack(vgg_features_test)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "4997a65b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-07-07T09:43:52.898813Z",
     "iopub.status.busy": "2023-07-07T09:43:52.898351Z",
     "iopub.status.idle": "2023-07-07T09:45:31.504674Z",
     "shell.execute_reply": "2023-07-07T09:45:31.503259Z"
    },
    "papermill": {
     "duration": 98.621604,
     "end_time": "2023-07-07T09:45:31.507740",
     "exception": false,
     "start_time": "2023-07-07T09:43:52.886136",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=Inception_V3_Weights.IMAGENET1K_V1`. You can also use `weights=Inception_V3_Weights.DEFAULT` to get the most up-to-date weights.\n",
      "  warnings.warn(msg)\n",
      "Downloading: \"https://download.pytorch.org/models/inception_v3_google-0cc3c7bd.pth\" to /root/.cache/torch/hub/checkpoints/inception_v3_google-0cc3c7bd.pth\n",
      "100%|██████████| 104M/104M [00:00<00:00, 213MB/s]\n"
     ]
    }
   ],
   "source": [
    "import torch\n",
    "import torchvision.transforms as transforms\n",
    "from torchvision.models import inception_v3\n",
    "from PIL import Image\n",
    "\n",
    "inception = inception_v3(pretrained=True)\n",
    "inception.eval()\n",
    "\n",
    "preprocess = transforms.Compose([\n",
    "    transforms.Resize((75, 75)),\n",
    "    transforms.ToTensor(),\n",
    "    transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])\n",
    "])\n",
    "\n",
    "inception_features_train = []\n",
    "inception_features_test = []\n",
    "\n",
    "for image in x_train:\n",
    "    image = transforms.functional.to_pil_image(image)\n",
    "    input_tensor = preprocess(image)\n",
    "    input_batch = input_tensor.unsqueeze(0)\n",
    "    with torch.no_grad():\n",
    "        features = inception(input_batch)\n",
    "    features = torch.flatten(features, start_dim=1)\n",
    "    inception_features_train.append(features)\n",
    "\n",
    "for image in x_test:\n",
    "    image = transforms.functional.to_pil_image(image)\n",
    "    input_tensor = preprocess(image)\n",
    "    input_batch = input_tensor.unsqueeze(0)\n",
    "    with torch.no_grad():\n",
    "        features = inception(input_batch)\n",
    "    features = torch.flatten(features, start_dim=1)\n",
    "    inception_features_test.append(features)\n",
    "\n",
    "inception_features_train = torch.stack(inception_features_train)\n",
    "inception_features_test = torch.stack(inception_features_test)\n",
    "inception_features_train = inception_features_train.squeeze(1)\n",
    "inception_features_test = inception_features_test.squeeze(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "35a03192",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-07-07T09:45:31.534037Z",
     "iopub.status.busy": "2023-07-07T09:45:31.533583Z",
     "iopub.status.idle": "2023-07-07T09:46:08.110527Z",
     "shell.execute_reply": "2023-07-07T09:46:08.108949Z"
    },
    "papermill": {
     "duration": 36.593613,
     "end_time": "2023-07-07T09:46:08.113426",
     "exception": false,
     "start_time": "2023-07-07T09:45:31.519813",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=MobileNet_V2_Weights.IMAGENET1K_V1`. You can also use `weights=MobileNet_V2_Weights.DEFAULT` to get the most up-to-date weights.\n",
      "  warnings.warn(msg)\n",
      "Downloading: \"https://download.pytorch.org/models/mobilenet_v2-b0353104.pth\" to /root/.cache/torch/hub/checkpoints/mobilenet_v2-b0353104.pth\n",
      "100%|██████████| 13.6M/13.6M [00:00<00:00, 120MB/s]\n"
     ]
    }
   ],
   "source": [
    "import torch\n",
    "import torchvision.transforms as transforms\n",
    "from torchvision.models import mobilenet_v2\n",
    "from PIL import Image\n",
    "\n",
    "mobilenet = mobilenet_v2(pretrained=True)\n",
    "mobilenet.eval()\n",
    "\n",
    "preprocess = transforms.Compose([\n",
    "    transforms.Resize((64, 64)),\n",
    "    transforms.ToTensor(),\n",
    "    transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])\n",
    "])\n",
    "\n",
    "mobilenet_features_train = []\n",
    "mobilenet_features_test = []\n",
    "\n",
    "for image in x_train:\n",
    "    image = transforms.functional.to_pil_image(image)\n",
    "    input_tensor = preprocess(image)\n",
    "    input_batch = input_tensor.unsqueeze(0)\n",
    "    with torch.no_grad():\n",
    "        features = mobilenet.features(input_batch)\n",
    "        features = torch.nn.functional.adaptive_avg_pool2d(features, 1)  # Apply Global Average Pooling (GAP)\n",
    "    features = torch.flatten(features, start_dim=1)\n",
    "    mobilenet_features_train.append(features)\n",
    "\n",
    "for image in x_test:\n",
    "    image = transforms.functional.to_pil_image(image)\n",
    "    input_tensor = preprocess(image)\n",
    "    input_batch = input_tensor.unsqueeze(0)\n",
    "    with torch.no_grad():\n",
    "        features = mobilenet.features(input_batch)\n",
    "        features = torch.nn.functional.adaptive_avg_pool2d(features, 1)  # Apply Global Average Pooling (GAP)\n",
    "    features = torch.flatten(features, start_dim=1)\n",
    "    mobilenet_features_test.append(features)\n",
    "\n",
    "mobilenet_features_train = torch.stack(mobilenet_features_train)\n",
    "mobilenet_features_test = torch.stack(mobilenet_features_test)\n",
    "mobilenet_features_train = mobilenet_features_train.squeeze(1)\n",
    "mobilenet_features_test = mobilenet_features_test.squeeze(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "69c08d4c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-07-07T09:46:08.140819Z",
     "iopub.status.busy": "2023-07-07T09:46:08.140439Z",
     "iopub.status.idle": "2023-07-07T09:47:49.300325Z",
     "shell.execute_reply": "2023-07-07T09:47:49.299094Z"
    },
    "papermill": {
     "duration": 101.17673,
     "end_time": "2023-07-07T09:47:49.303308",
     "exception": false,
     "start_time": "2023-07-07T09:46:08.126578",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=DenseNet121_Weights.IMAGENET1K_V1`. You can also use `weights=DenseNet121_Weights.DEFAULT` to get the most up-to-date weights.\n",
      "  warnings.warn(msg)\n",
      "Downloading: \"https://download.pytorch.org/models/densenet121-a639ec97.pth\" to /root/.cache/torch/hub/checkpoints/densenet121-a639ec97.pth\n",
      "100%|██████████| 30.8M/30.8M [00:00<00:00, 156MB/s]\n"
     ]
    }
   ],
   "source": [
    "import torch\n",
    "import torchvision.transforms as transforms\n",
    "from torchvision.models import densenet121\n",
    "from PIL import Image\n",
    "\n",
    "densenet = densenet121(pretrained=True)\n",
    "densenet.eval()\n",
    "\n",
    "preprocess = transforms.Compose([\n",
    "    transforms.Resize((64, 64)),\n",
    "    transforms.ToTensor(),\n",
    "    transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])\n",
    "])\n",
    "\n",
    "densenet_features_train = []\n",
    "densenet_features_test = []\n",
    "\n",
    "for image in x_train:\n",
    "    image = transforms.functional.to_pil_image(image)\n",
    "    input_tensor = preprocess(image)\n",
    "    input_batch = input_tensor.unsqueeze(0)\n",
    "    with torch.no_grad():\n",
    "        features = densenet.features(input_batch)\n",
    "        features = torch.nn.functional.adaptive_avg_pool2d(features, 1)  # Apply Global Average Pooling (GAP)\n",
    "    features = torch.flatten(features, start_dim=1)\n",
    "    densenet_features_train.append(features)\n",
    "\n",
    "for image in x_test:\n",
    "    image = transforms.functional.to_pil_image(image)\n",
    "    input_tensor = preprocess(image)\n",
    "    input_batch = input_tensor.unsqueeze(0)\n",
    "    with torch.no_grad():\n",
    "        features = densenet.features(input_batch)\n",
    "        features = torch.nn.functional.adaptive_avg_pool2d(features, 1)  # Apply Global Average Pooling (GAP)\n",
    "    features = torch.flatten(features, start_dim=1)\n",
    "    densenet_features_test.append(features)\n",
    "\n",
    "densenet_features_train = torch.stack(densenet_features_train)\n",
    "densenet_features_test = torch.stack(densenet_features_test)\n",
    "densenet_features_train = densenet_features_train.squeeze(1)\n",
    "densenet_features_test = densenet_features_test.squeeze(1)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "7a06a3e3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-07-07T09:47:49.331335Z",
     "iopub.status.busy": "2023-07-07T09:47:49.330315Z",
     "iopub.status.idle": "2023-07-07T09:47:49.338505Z",
     "shell.execute_reply": "2023-07-07T09:47:49.337195Z"
    },
    "papermill": {
     "duration": 0.024711,
     "end_time": "2023-07-07T09:47:49.340856",
     "exception": false,
     "start_time": "2023-07-07T09:47:49.316145",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(2637, 4096)\n",
      "(660, 4096)\n",
      "torch.Size([2637, 1000])\n",
      "torch.Size([660, 1000])\n",
      "torch.Size([2637, 2048])\n",
      "torch.Size([660, 2048])\n",
      "torch.Size([2637, 1000])\n",
      "torch.Size([660, 1000])\n",
      "torch.Size([2637, 1280])\n",
      "torch.Size([660, 1280])\n",
      "torch.Size([2637, 1024])\n",
      "torch.Size([660, 1024])\n"
     ]
    }
   ],
   "source": [
    "print(lbp_train.shape)\n",
    "print(lbp_test.shape)\n",
    "print(resnet_features_train.shape)\n",
    "print(resnet_features_test.shape)\n",
    "print(vgg_features_train.shape)\n",
    "print(vgg_features_test.shape)\n",
    "print(inception_features_train.shape)\n",
    "print(inception_features_test.shape)\n",
    "print(mobilenet_features_train.shape)\n",
    "print(mobilenet_features_test.shape)\n",
    "print(densenet_features_train.shape)\n",
    "print(densenet_features_test.shape)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "d09eade6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-07-07T09:47:49.369011Z",
     "iopub.status.busy": "2023-07-07T09:47:49.368564Z",
     "iopub.status.idle": "2023-07-07T09:47:49.373947Z",
     "shell.execute_reply": "2023-07-07T09:47:49.372746Z"
    },
    "papermill": {
     "duration": 0.022492,
     "end_time": "2023-07-07T09:47:49.376310",
     "exception": false,
     "start_time": "2023-07-07T09:47:49.353818",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import torch\n",
    "\n",
    "# Convert LBP features to tensors\n",
    "lbp_train = torch.from_numpy(lbp_train)\n",
    "lbp_test = torch.from_numpy(lbp_test)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "66dd1e5c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-07-07T09:47:49.404633Z",
     "iopub.status.busy": "2023-07-07T09:47:49.403790Z",
     "iopub.status.idle": "2023-07-07T09:47:49.584746Z",
     "shell.execute_reply": "2023-07-07T09:47:49.583647Z"
    },
    "papermill": {
     "duration": 0.198229,
     "end_time": "2023-07-07T09:47:49.587500",
     "exception": false,
     "start_time": "2023-07-07T09:47:49.389271",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Combine ResNet-50 features with LBP features for training data\n",
    "combined_features_train = torch.cat((densenet_features_train,mobilenet_features_train,resnet_features_train, lbp_train,vgg_features_train), dim=1)\n",
    "\n",
    "# Combine ResNet-50 features with LBP features for test data\n",
    "combined_features_test = torch.cat((densenet_features_test,mobilenet_features_test,resnet_features_test, lbp_test,vgg_features_test), dim=1)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "debaa5a4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-07-07T09:47:49.615774Z",
     "iopub.status.busy": "2023-07-07T09:47:49.615369Z",
     "iopub.status.idle": "2023-07-07T09:48:43.164181Z",
     "shell.execute_reply": "2023-07-07T09:48:43.162804Z"
    },
    "papermill": {
     "duration": 53.578717,
     "end_time": "2023-07-07T09:48:43.179215",
     "exception": false,
     "start_time": "2023-07-07T09:47:49.600498",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.803030303030303\n"
     ]
    }
   ],
   "source": [
    "from sklearn import svm\n",
    "from sklearn.metrics import accuracy_score\n",
    "\n",
    "# Create an SVM classifier\n",
    "svm_classifier = svm.SVC(kernel='rbf')\n",
    "\n",
    "# Train the SVM classifier\n",
    "svm_classifier.fit(combined_features_train, y_train)\n",
    "\n",
    "# Make predictions on the test data\n",
    "predictions = svm_classifier.predict(combined_features_test)\n",
    "\n",
    "# Calculate the accuracy of the predictions\n",
    "accuracy = accuracy_score(y_test, predictions)\n",
    "\n",
    "print(\"Accuracy:\", accuracy)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "078efec6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-07-07T09:48:43.209474Z",
     "iopub.status.busy": "2023-07-07T09:48:43.208108Z",
     "iopub.status.idle": "2023-07-07T09:52:33.860471Z",
     "shell.execute_reply": "2023-07-07T09:52:33.858788Z"
    },
    "papermill": {
     "duration": 230.670738,
     "end_time": "2023-07-07T09:52:33.863529",
     "exception": false,
     "start_time": "2023-07-07T09:48:43.192791",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Random Forest Accuracy: 0.8424242424242424\n",
      "XGBoost Accuracy: 0.8515151515151516\n",
      "AdaBoost Accuracy: 0.8075757575757576\n",
      "Naive Bayes Accuracy: 0.7303030303030303\n"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier\n",
    "from sklearn.naive_bayes import GaussianNB\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "import xgboost as xgb\n",
    "from sklearn.metrics import accuracy_score\n",
    "\n",
    "# Random Forest Classifier\n",
    "rf_classifier = RandomForestClassifier()\n",
    "rf_classifier.fit(combined_features_train, y_train)\n",
    "rf_predictions = rf_classifier.predict(combined_features_test)\n",
    "rf_accuracy = accuracy_score(y_test, rf_predictions)\n",
    "print(\"Random Forest Accuracy:\", rf_accuracy)\n",
    "\n",
    "# XGBoost Classifier\n",
    "xgb_classifier = xgb.XGBClassifier()\n",
    "xgb_classifier.fit(combined_features_train, y_train)\n",
    "xgb_predictions = xgb_classifier.predict(combined_features_test)\n",
    "xgb_accuracy = accuracy_score(y_test, xgb_predictions)\n",
    "print(\"XGBoost Accuracy:\", xgb_accuracy)\n",
    "\n",
    "# AdaBoost Classifier\n",
    "ada_classifier = AdaBoostClassifier()\n",
    "ada_classifier.fit(combined_features_train, y_train)\n",
    "ada_predictions = ada_classifier.predict(combined_features_test)\n",
    "ada_accuracy = accuracy_score(y_test, ada_predictions)\n",
    "print(\"AdaBoost Accuracy:\", ada_accuracy)\n",
    "\n",
    "# Naive Bayes Classifier\n",
    "nb_classifier = GaussianNB()\n",
    "nb_classifier.fit(combined_features_train, y_train)\n",
    "nb_predictions = nb_classifier.predict(combined_features_test)\n",
    "nb_accuracy = accuracy_score(y_test, nb_predictions)\n",
    "print(\"Naive Bayes Accuracy:\", nb_accuracy)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "628872be",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-07-07T09:52:33.893278Z",
     "iopub.status.busy": "2023-07-07T09:52:33.892059Z",
     "iopub.status.idle": "2023-07-07T09:52:34.741164Z",
     "shell.execute_reply": "2023-07-07T09:52:34.740101Z"
    },
    "papermill": {
     "duration": 0.866395,
     "end_time": "2023-07-07T09:52:34.743746",
     "exception": false,
     "start_time": "2023-07-07T09:52:33.877351",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x900 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn.metrics import confusion_matrix\n",
    "\n",
    "# Calculate the confusion matrix for XGBoost Classifier\n",
    "xgb_cm = confusion_matrix(y_test, xgb_predictions)\n",
    "\n",
    "# Plot the confusion matrix\n",
    "plt.figure(figsize=(4, 3),dpi=300)\n",
    "sns.heatmap(xgb_cm, annot=True, cmap=\"Blues\", fmt=\"d\", xticklabels=['Class 0', 'Class 1'], yticklabels=['Class 0', 'Class 1'])\n",
    "plt.xlabel('Predicted')\n",
    "plt.ylabel('Actual')\n",
    "plt.title('Confusion Matrix - XGBoost Classifier')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "3521b105",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-07-07T09:52:34.775403Z",
     "iopub.status.busy": "2023-07-07T09:52:34.774308Z",
     "iopub.status.idle": "2023-07-07T09:52:34.799475Z",
     "shell.execute_reply": "2023-07-07T09:52:34.798040Z"
    },
    "papermill": {
     "duration": 0.044169,
     "end_time": "2023-07-07T09:52:34.802461",
     "exception": false,
     "start_time": "2023-07-07T09:52:34.758292",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Random Forest Precision: 0.8527233232141005\n",
      "Random Forest Recall: 0.8515151515151516\n",
      "Random Forest F1-score: 0.851735746144767\n",
      "Random Forest Classification Report:\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.88      0.84      0.86       360\n",
      "           1       0.82      0.86      0.84       300\n",
      "\n",
      "    accuracy                           0.85       660\n",
      "   macro avg       0.85      0.85      0.85       660\n",
      "weighted avg       0.85      0.85      0.85       660\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import precision_score, recall_score, f1_score, classification_report\n",
    "\n",
    "# Random Forest Classifier\n",
    "rf_precision = precision_score(y_test, xgb_predictions, average='weighted')\n",
    "rf_recall = recall_score(y_test, xgb_predictions, average='weighted')\n",
    "rf_f1 = f1_score(y_test, xgb_predictions, average='weighted')\n",
    "print(\"Random Forest Precision:\", rf_precision)\n",
    "print(\"Random Forest Recall:\", rf_recall)\n",
    "print(\"Random Forest F1-score:\", rf_f1)\n",
    "\n",
    "# Classification Report\n",
    "rf_classification_report = classification_report(y_test, xgb_predictions)\n",
    "print(\"Random Forest Classification Report:\\n\", rf_classification_report)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "042eac84",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-07-07T09:52:34.834050Z",
     "iopub.status.busy": "2023-07-07T09:52:34.833576Z",
     "iopub.status.idle": "2023-07-07T09:52:35.376900Z",
     "shell.execute_reply": "2023-07-07T09:52:35.375494Z"
    },
    "papermill": {
     "duration": 0.56281,
     "end_time": "2023-07-07T09:52:35.380223",
     "exception": false,
     "start_time": "2023-07-07T09:52:34.817413",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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pUqVIITg71gqtZigISIi0rGAJwkYs+USEtNzjB2K2hyszLB2eBP4ONsYOxQiIiIiIiIqZ8LDwzF9+nTs3r1bre3btGmDjRs3om7dunqOjEi/OMUZERGRDp24F403N10oVcmZehUd8Ne0dmhf3d3YoRAREREREVE5IpfLsXbtWtSuXVut5IyjoyPWr1+P06dPMzlDZQJH0BAREenI7oAwfLjzBnIVwtihFMnXxRrtqrnj9WY+aOTrxOHgREREREREZFA3btzAxIkTceHCBbW2HzJkCL799lt4e3vrOTIiw2GChoiISAe+Px2ERfvvGDsMlewtzdDQ1wmNfJ3QuJITGvo6wc3O0thhERERERERUTmUkZGBzz//HF9//TVyc3OL3N7X1xdr165F3759DRAdkWExQUNERFQMQgh88c9dbDgVZOxQAAAmMqCml0NeMqaxrxP83e1gYsIRMkRERERERGRchw8fxuTJkxEUVPRvaBMTE7zzzjtYuHAh7OzsDBAdkeExQUNERKSlHLkCs/64iT+uhhktBk8HSzT2dUajSs9GyNSv6AhbS+7eiYiIiIiIqOSIiYnBjBkzsH37drW2b9SoETZt2oRmzZrpOTIi4+IZHCIiIi1kZMvx9i9XcexutMH6tDI3QYOKTnnJmMaVnODtaG2w/omIiIiIiIi08dFHH6mVnLGxscHnn3+Od999F2ZmPHVNZR/f5URERBpKTM/G2C2XcPVJol778Xe3RSNfZzR+npCp6WUPc1MTvfZJREREREREpGuLFy/Gn3/+ieTk5AK36dGjB7777jtUqVLFgJERGRcTNERERBp4mpiBUT9exMPoVL310biSEzaMbAoPeyu99UFERERERERkKBUqVMAXX3yBqVOnSh7z8PDAt99+i6FDh0Im4/qpVL7wMlwiIiI1PYxOwaB15/SanOlc0x2/jG/F5AwRERERERGVKZMmTULr1q2VysaPH487d+7gjTfeYHKGyiUmaIiIiNRw/lEcBq8/j4ikTL31MbBJRWwc1QzWFqZ664OIiIiIiIjIGExMTLBx40aYmZmhZs2aOHnyJDZt2gQXFxdjh0ZkNJzijIiIqABxqVnYc+0pdl0Jw52IgufJ1YVJHapiVs9avGKIiIiIiIiISg0hBP777z/JyJiC1KtXDwcPHkS7du1gaWmp5+iISj4maIiIiF6SK1fg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WLCA5gwAAADgIi6ZQQMAAAAAMMfq1avVp08fRUVFZTjWw8NDAwYM0P/+9z/lyZPHCekAAAAApIcGDQAAAABkQRcuXNBrr72mb775xqbxtWrV0qxZs1SvXj0HJwMAAABgC5Y4AwAAAIAsxDAMffnll6pSpYpNzZncuXNr3Lhx2rJlC80ZAAAAwI1kqxk0V69e1erVq3XkyBHlypVLVatW1QMPPCAPD/pQAAAAALK+Gzdu6NFHH9Wvv/5q0/h27dpp2rRpKl++vIOTAQAAAMgst23QXLx4Ubt377aeN2/eXN7e3umOnzJlit59913FxsamuV66dGmFh4erdevWDssKAAAAAM7g5+enAgUKZDiuSJEimjhxop588klZLBYnJAMAAACQWW47teSzzz5TmzZt1KZNG73yyit3bc5MmjRJAwcO1LVr12QYRpqv48eP6+GHH9aKFSucmB4AAAAAHGPSpEkKCAhI9/VevXopMjJS3bt3pzkDAAAAuDG3bdAsW7ZMhmFIkl566aV0x506dUpvvvmmJMlisdz2B4jFYlFycrKeeeYZXb582WF5AQAAAMAZihcvro8//vi265UrV9Zvv/2mWbNm2TTLBgAAAIBruWWD5urVq4qIiLA2W9q3b5/u2AkTJighIUHSzc0ya9WqpU8//VQTJ05Uw4YNrU2eS5cuady4cY4PDwAAAAAOFhoaqiZNmkiSfHx8NHz4cO3atUv333+/i5MBAAAAsJVbNmj++ecf6xJlgYGBqlq1arpj582bZ23kNGjQQJs3b9bgwYP16quvauPGjWrXrp2km82bb7/91in5AQAAAMCRPDw8FBYWptatW2vnzp0aMWKEcuXK5epYAAAAADLBLRs0R48elXRzebLg4OB0x+3atUunTp2yzpIZOXKkfHx8rK97eHjo008/tZ4fP35chw8fdkxoAAAAALhHKSkpmjhxonr27GnzPdWqVdOaNWvu+oE2AAAAAO7LLRs0Fy5csB4XKVIk3XG///679bhAgQJq27btbWOqVq2qChUqWM93795tUkrAvV1PTHZ1BAAAANhgx44datSokQYNGqTZs2dr2bJlro4EAAAAwAncskFz/fp163GePHnSHbdp0yZJN2fatGnTxrrU2X/9+xNlp0+fNikl4N72nb1m1/0Wi+Tj6ZY/IgAAALKFuLg4vfHGG6pfv762bt1qvd6/f3/Fxsa6MBkAAAAAZ3DLd189PT2txwkJCemOu9WgkaTmzZunOy4wMNB6fO2afW9aA1lBbEKyjkbH2VWjoH8uedGgAQAAcIgVK1YoJCREn3zyiVJSUtK8duLECQ0bNsxFyQAAAAA4i1u++5o3b17rcXozXo4ePaoTJ05Yzxs3bpxuvbs1eYDsaP/Zq/r/WzPds8rF0p+9BgAAgHtz7tw5PfXUU3r44Yete2/eyaRJk7RlyxbnBQMAAADgdG7ZoClTpowkyTAM7dq167ZPlElKsy6zv7+/atSokW69S5cuWY//3fwBsqu9p6/aXSO4eD4TkgAAAEC6+bdNeHi4qlatqu+++y7D8X5+fjp8+LATkgEAAABwFbds0NSqVUvSzb1lYmNjtXDhwtvGhIeHW8c0bdpUHh7pfysHDx60HpcoUcLcsIAbijCjQVOCBg0AAIAZ9u/fr1atWqlXr15pPjyWnkcffVQRERHq3r27E9IBAAAAcBW3bNCUKlXK2qQxDEMDBgzQhg0bJEmJiYkaNGiQdu/ebR3fuXPndGtdunRJx44ds55XqFDBMaEBNxJxxv4GTbUSASYkAQAAyLkSEhL0wQcfqEaNGvrtt98yHF+8eHEtXLhQS5cuta4qAAAAACD78nJ1gPT069dPoaGhslgsunjxolq2bKmCBQvq6tWrSkpKksVikWEYCggIUI8ePdKts3r1auuxr6+vqlWr5oz4gMskp6Rq39lrdtXw8fJQUCF/kxIBAADkPBs2bFBoaKj27dtn0/g+ffpo9OjRCgwMdGwwAAAAAG7DLWfQSNJLL72kZs2ayTAMazPm4sWLSkxMtI6xWCwaMWLEXfeVWbJkiXVsnTp15Onp6fDsgCsdvhCnxORUu2pUKZZXXp5u++MBAADAbV26dEmhoaG6//77bWrOBAcH648//tD06dNpzgAAAAA5jNu+A2uxWLRs2TI9+OCDMgwjzWuGYcgwDA0aNEgDBgxIt0Z0dLSWLl0qi8UiSWrTpo1DMwPuIOLMFbtrVGP/GQAAgEwxDEPz589X1apVNWvWrAzH58qVS6NGjdKOHTvUtGlTJyQEAAAA4G7cdokzSQoICNCqVau0atUq/fjjj9a9ZKpUqaIePXqobt26d73/m2++Ua5cuZQrVy5JNzfbBLK7iNP27z8TXJwGDQAAgK2OHTumfv36afny5TaNb9WqlWbMmKFKlSo5OBkAAAAAd+bWDZpb2rZtq7Zt22b6voEDB2rgwIEOSAS4r71mNGiYQQMAAGCTuLg41a1bV9HR0RmOLVCggD799FM9//zz1ln+AAAAAHIut13iDEDmGYahiDP2NWgsFqlKMRo0AAAAtvD399drr72W4bhnnnlG+/bt0wsvvEBzBgAAAIAkGjRAtnLmSrwuX0+yq0b5gv7yz5UlJtcBAAC4hSFDhigkJOSOrwUFBWnVqlX6+uuvVbhwYScnAwAAAODOaNAA2YgZ+89UZXkzAACATPHx8VFYWFiamTGenp5666239M8//6hNmzYuTAcAAADAXWXJj8mfPXtWW7Zs0fnz5xUTEyOLxaL8+fOrSJEiql+/vooVK+bqiIBLmLL/THEaNAAAAJnVuHFj9e3bV9OmTVODBg00a9Ys1ahRw9WxAAAAALixLNOgiY6O1vTp0zVnzhwdOXLkrmPLly+vF154QX369FGhQoWclBBwvYgzV+yuUY0ZNAAAAJKk1NRUnTt3TsWLF7dp/EcffaQaNWqoV69e8vT0dHA6AAAAAFldllji7PPPP1e5cuU0fPhwRUVFyTCMu35FRUVp+PDhKleunGbNmuXq+IDTRJwxYQYNDRoAAABFRETo/vvv14MPPqjExESb7gkICFDv3r1pzgAAAACwids3aHr37q3evXsrLi5OhmHIYrGkWdv5v269bhiGrl+/rj59+ujll192YmLANa5cT9KJmBt21SiUJ5eK5PU1KREAAEDWEx8fr+HDh6tWrVrauHGjIiIiNHbsWFfHAgAAAJANufUSZyNHjrTOgLnVdDEMQ4ULF1bDhg1VpUoVBQQESJKuXLmi/fv366+//tL58+etTRzDMPTFF1+oRIkSGjlypMu+F8DRvv37mN01WN4MAADkZOvXr1fv3r114MCBNNdHjRqlbt26qVKlSi5KBgAAACA7ctsGzb59+zRq1Kg0jZZatWpp1KhRateunTw87jz5JzU1VStXrtR7772nHTt2WBs7H330kbp3766qVas689sAnOLK9STNWH/Y7josbwYAAHKimJgYDR06VF988cUdX09ISFDv3r3166+/3nU2PwAAAABkhtsucTZ8+HClpKTIMAxJ0iuvvKKtW7eqffv26TZnDlbt5wAA1shJREFUJMnDw0MPP/ywtmzZogEDBliXRUtN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pDJlymjixInJhjPSg0PmV65cqfr16ys4OFixsbEW1/fff/+pQYMGevPNN1M9iP7o0aPq1auXqlSpYvqdMzXff/+9KleurNDQUIsOIb9165Z+/vln09eQs/n999/N2hkJHYxGo+bOnWtqu7i46K233jK1H3vsMbOH7X/++WeSAZWziY6O1vr16836unXr5qBqsrYDBw6YtRs0aJCm6x+u1nro4MGDGa7poevXr5u1c+fOnabrE46PiYlRWFhYBquyvoTfA3777TcHVYK0IKABYFVGo1Hff/+9AgICzH64e+jzzz93yv+JAQAAAMj8cufOnegMjaFDh2rTpk165513zPqHDRuWpndn//XXX2btWrVqydvbO/3FOkDC8yGaNm1q0RZec+bM0auvvpoo1Chbtqxatmyptm3bqkGDBolWE4WEhKhly5YWhTRnzpxRgwYN9O+//5r1+/r6qlmzZmrfvr2eeeaZROdZHDlyRI899liqgc6mTZv01ltvKSoqyqy/QoUKatGihV5//XW1bdtWzz33nMqXL5/ioebOYtWqVaY/58uXTwEBAemea926dTp16pSp3bRpUxUvXtxszKMrahIGOs7q33//1f379836mjZt6qBqsrZDhw6ZtcuVK5em6xNuF5dwvozw8PAwayf8PpCapMZbsz5rKVy4sNnnfc2aNWZvLIBzYg8hAFZz8uRJ9ejRw2zP2oSio6MVHBys9evXZ4ofeAEAAABkLs8884y6du1q2o4pOjpaTZs2NQsJ6tWrpwEDBqRp3i1btpi169atm/Fi7WjBggWaOnWqqW0wGNS3b99Ur9uzZ4969Ohhtj1Q9erV9dVXXyV6x/vVq1c1ePBgff3116a+lStXasiQIfr888+TvUdsbKzat29vtiLDx8dHo0aNUrdu3eTp6Wk2duHCherbt6+uXbsm6cHWa23atNHOnTuTPVdkwIABZmcPtWnTRqNHj1aZMmWSHB8REaE///xTS5YsMZ2L8ai///5bsbGxOn/+vNlZq6+++qrGjx+f7H9rvnz5kn0tLc6dO6cLFy6Y2tWqVcvQfAmDzaS2YXv77bc1ePBg09fC3LlzNWTIEKf+3X7z5s1m7dy5c6c5OLCniIgI09e1LXl6eqpQoUJWnfP48eNm7bSeqZVwvKUr4yyRMNi9ceOGIiMjzb63pCSp7wEJVyQ6i+rVq5v+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HTw9PVWgQAFVq1ZNb731lmbMmKH//vtP33zzjdlh7ZZo3bq1Tpw4offeey/Fa93d3dW8eXNt3rxZs2fPTnXlzKOKFCmif//9V6GhoSluiSY9eOf2lClTdODAAVWsWDHFsZ06ddL333+vN954w6LtvNzc3PTss89qxYoVWr58uby9vVO9plOnTgoLC9OIESP01FNPqVixYvL29rb5jh1vv/222RlC33zzTbJjE2491rx5c6sdIJ6Wbc4kKX/+/FqzZo3Wr1+vli1bpvo5dnV1Vd26dTVv3jyFhYWpZs2aGaq3UaNG2rVrl1auXKl27dopV65cqV7j7e2t559/XvPnz9f58+c1cOBApz0s3hl06tRJe/fu1RtvvJHs36+Li4ueeuop/fnnn5o0aZLF24elV+XKldWhQwcVKlQoxXEGg0GPP/64lixZok2bNqlMmTI2rcsaHt3i09vbW127dnVgNUgLtjhDlpLWLc4mt6uul6oXtUdpdrV371517drVtMw5NW3bttW0adPS/AM6AAAAYG1scYbMLioqSvv27dPx48d16dIl3bt3T66ursqdO7dy586t4sWLq3r16hY99HdW8fHx2rlzp8LCwnT16lVFRUUpX758KlasmBo1amS18yMuXLigbdu26fLly7p586Z8fX1VoEAB1alTJ0MPTP/77z8dPnxYp0+f1vXr13X//n15eXkpd+7cqlixoqpVqyY/v8zzhs4hQ4aYzhfKmTOnLly4oNy5czu2qDSKjY3Vrl27dOzYMd24cUO3bt1Szpw55e/vr2LFiql+/fry8fGx2f3j4+N1+PBhHT58WBcuXFBERIRcXFyUO3du5c2bV4GBgQoMDEx2mzuk7O7du/r77791/vx5XblyRblz51aRIkVUt25dFS5c2CE1nT59Wvv379e5c+d069YtxcfHy8/PT2XLllW9evWsFl7aQ1RUlIoWLarw8HBJUu/evTVlyhSr3oMtzmyHgAZZSloDmrUfPK5yBWxz8Jgj3Lt3T8OGDdOECROSPfDwUSVLltT06dP1/PPP26E6AAAAIHUENACQNjdu3FCZMmV08+ZNSdLo0aP10UcfObYoAHYTEhKi4OBgSZKXl5eOHTumokWt+4Z0AhrbIfZFtuXp7qLS+Wz37gt7W7VqlYKCgjRu3LhUwxkXFxf169dPBw8eJJwBAAAAACAT8/f3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wwaX/AcDcCtw9bll/fr1+v77783xJ598YvNa8wCcz5XnloKO88EHHxS5dKKHh4cWLlxoaNu2bZsSEhLskhuAwrny3HLDm2++qUcffdS8b54k3X777Vq+fLkiIiKUmpqq9PR0xcTEaN26derfv7+537Fjx9S3b1+tWrXKrjkBKLvKwrxXHBRo4FCu/MFx5dwAFK6sf34PHTqke+65R2lpaea2O++8Uz/++KOqVq3qtDwAGLny3HLp0iXNnDnTHI8fP17Dhg2zy7EBOJYrzy35HScgIEB33XWXVeN79+6tZs2aGdp+/fVXu+QGoHCuPLdI0o4dO/Tqq68a2ubNm6cDBw5oypQpatGihapWrarKlSurSZMmGjdunHbs2KHPPvvM/IW1nJwcTZ06lTtpAEhy/XmvuCjQwKFq1qxpiNPS0gzfnLBG3m9g1apVq6RpSbLM7eLFizYfw1G5ASicK88tRTl69KgGDx6sq1evmtu6dOmioKAgeXl5OSUHAPlz5bll5syZ5n+reHt7F7qxLgDX4spzS37H6dGjh03H6N69uyE+ceJESVICYCVXnlskac6cOTKZTOZ40qRJmjt3bpGrBTz66KOaM2eOOc7JydGsWbPslheAsqu8XsulQAOHqlOnjmrXrm1oO3XqlE3HiIuLM8QtW7YscV75HSfveazhqNwAFM6V55bCHD9+XAMHDlRiYqK5rUOHDtq2bZtL/KMAuNW56twSHh6udevWmePZs2crLS1NsbGxhf7k3fw7JSXF8Litzw1A8bjq3CL9dbdM3k2769evb9Mx/P39DfHly5dLnBeAorny3HL27Fnt27fP0DZ37lyrx7/44ouGPbAOHTqko0eP2iU3AGVXeb2WS4EGDte2bVtDHBkZadP46OjoQo9XXK1bt5a7u7s5TkhIUHJystXjr127pkuXLpljd3d3l/hQA7cKV51bChIeHq67777b8A2PNm3aaPv27apbt65Dzw3Aeq44t+S9Df+1115T06ZNi/xZvHixYdy3335reLxTp04lzg2AdVxxbpH++humdevWhra8BZui5O2fkZFR4rwAWMdV55YjR44Y4mbNmqlp06ZWj69WrZrF3Xz79++3R2oAyrDyei2XAg0crkOHDoZ47969Vo9NTU21+JZE3uMVV6VKldS8efNi5xYcHGyIW7ZsafMfMwCKz1XnlvxERkZqwIABOn/+vLmtZcuW2rFjh+rVq+ew8wKwXVmaWwCUHa48t+Qt1ua9+64oefvXqVOnhBkBsJarzi155wU/Pz+bj5F3zM0XVQHcmsrrtVwKNHC4oUOHGuJdu3ZZPXb37t3Kzs42x126dLHrxcyS5Ja3Lxv1As7lynPLzWJiYjRgwADFx8eb25o1a6YdO3bYvIQIAMcrK3MLgLLFleeW4cOHG+LQ0FCbxh87dswQN2zYsMQ5AbCOq84teZdvtnVvHOmvpVlv5gobeQMofeXxWi4FGjjckCFDDGuH7t27V2FhYVaNXblypSF+4IEH7JmaxfFWr16tnJycIsfl5OToq6++cmhuAArnynPLDadOndKAAQN0+vRpc1tAQIB27NjBxQvARbni3HLbbbfJZDLZ/JN3rfdJkyYZHrf1W/IAis8V55Yb7r33XsO3R3///XfDfnmFuXLlig4cOGBo69Onj13zA1AwV51b8u5NFR4errS0NJuOERISYoiLcxcOgPKnPF7LpUADh6tatapGjx5taHv33XeLHHfy5Elt3rzZHHt4eOjvf/+7XXPr06ePYR3UM2fOWHxY8/PVV1/p7Nmz5rh58+bq1auXXXMDUDhXnlskKT4+XnfffbdiY2PNbQ0aNNCOHTsUEBBg9/MBsA9Xn1sAlE2uPLfUqFHDkFtmZqaWLl1q1dilS5ca9pwJCAhgaUfAiVx1bunUqZNq165tjjMyMrR69Wqrx2/ZssVwzUWSevfubbf8AJRd5fJarglwgqioKJOnp6dJkvnn+++/L7B/enq6KTAw0NB/+vTpRZ7n5v6STDt37ixyzL///W/DGG9vb1NMTEyB/WNiYky1a9c2jFm3bl2R5wFgf646t1y4cMHUpk0bw5j69eubTp48aetTBFAKXHVusdXcuXMNx580aZJdjw/ANq48t0RHR5sqVqxoHlOpUiVTcHBwoWOCg4MNYySZPv300yLPBcC+XHVueeSRRwz9a9WqZfrzzz+LPE9cXJypQYMGhrG9evUqchwA59m5c6fhMxoQEFDsY3Et12TiDho4RbNmzTRr1ixD2+jRo7V06VJdv37d0H7ixAndfffdho2b6tSpY7FMh7089NBD6t69uzlOTExUYGCgtm3bZtE3KChIPXv21JUrV8xtgYGBGjt2rENyA1A4V5xbkpKSNGjQIMPSAtWqVdOXX34pT09PxcbG2vQDwPlccW4BUPa58tzStGlTPf/88+Y4MzNTgwcP1ieffKKsrCxD3+zsbH322WcaPHiwIe8777xTU6ZMcUh+AArmqnPLa6+9Zlh+LSkpSYGBgVq6dGm+y51dv35dq1atUrdu3Szunnn77bftnh+Aop05cybf6xTnz5839MvOzi7wmsalS5fsnld5u5brZjKZTKWdBG4NOTk5GjFihLZu3Wpo9/X1VdeuXVWjRg1FR0crJCREN78tK1asqO3bt1u1lrGbm5sh3rlzp/r161fkuHPnzqlHjx46deqUob1ly5Zq3769TCaTQkNDFRkZaXi8SZMm2rdvHxsAA6XI1eaWXbt2qX///rY/kQLwv2mgdLja3FIc8+bN0/z5883xpEmTLNabB+Bcrjy3mEwmjR07Vhs3bjS016pVSz169JC3t7cSExO1b98+iz2sGjRooH379rHHHlBKXHVu2bx5s8aMGWOxP0SVKlXUrVs3+fv7q0KFCjp//rwOHjyolJQUi2O8+eabevnll4vMD4D9NWnSRHFxcSU6RlF/g3AtVyxxBudKTk42jR071uL2tYJ+fH19TVu3brX6+HnH27JUSHh4uKlLly5W59a1a1dTREREMX4LAOzNleaWvLf6lvQHQOlxpbmlOFjiDHBNrjy3ZGRkmKZPn27Tv1XuvPNO09mzZ4vxmwBgT646t2zZssVUr149m/8OqlatmmnJkiXF/G0AsIeAgIASX9Mo6m+Qkvy7pbxcy2WJMzhV9erVtX79em3cuFE9evQosJ+3t7cef/xxHTt2TEOHDnVKbq1atdL+/fv19ttvq1mzZgX2a968ud5++23t27dPLVq0cEpuAArnynMLgLKLuQWAI7jy3FKpUiV9+umn2r59uwYNGiR3d/cC+3bo0EErV65UcHCw/P39nZIfgIK56txyzz336Pjx43rrrbfUvHnzIvvXq1dPzz33nEJDQ/XUU085PD8AZVd5uZbLEmcoVTExMQoJCVF8fLxSU1Pl5+engIAA9erVSxUrVizV3A4dOqSTJ08qPj5ekuTv769WrVqpW7dupZoXgKK58twCoOxibgHgCK48t1y8eFH79u3TuXPndOnSJdWoUUP16tVTYGAgy5kBLs5V55YzZ87o0KFDOnfunJKSkmQymVSzZk35+PioS5cuLnnxFEDZUFav5VKgAQAAAAAAAAAAcDKWOAMAAAAAAAAAAHAyCjQAAAAAAAAAAABORoEGAAAAAAAAAADAySjQAAAAAAAAAAAAOBkFGgAAAAAAAAAAACejQAMAAAAAAAAAAOBkFGgAAAAAAAAAAACcjAINAAAAAAAAAACAk1GgAQAAAAAAAAAAcDIKNAAAAAAAAAAAAE5GgQYAAAAAAAAAAMDJKNAAAAAAAAAAAAA4GQUaAAAAAAAAAAAAJ6NAAwAAAAAAAAAA4GQUaAAAAAAAAAAAAJyMAg0AAAAAAAAAAICTUaABAAAAAAAAAABwMgo0AAAAAAAAAAAATkaBBgAAAAAAAAAAwMko0AAAAAAAAAAAADgZBRoAAAAAAAAAAAAno0ADAAAAAAAAAADgZBRoAAAAAAAAAAAAnIwCDQAAAAAAAAAAgJNRoAEAAACcZN68eXJzczP/7Nq1q7RTQhkxefJkw3snNjbWoefr16+f4XwAAAAA7I8CDQAAAMqkJk2aGC4gF+dn9uzZpf00cJPY2FirXreKFSvK19dXbdu21bhx47Ro0SKdP3++tNPHLSpv4bWgn2rVqql+/frq2rWrHn74YX355Ze6du1aaacPAACAUkSBBgAAAECZkpWVpYsXLyosLEwbNmzQ008/rcaNG2vKlClKSkoq7fRKXd5C1+TJk0s7JUhKS0vT+fPndfjwYa1YsULTpk2Tn5+fXnzxRWVkZJR2ega8hwAAAJyDAg0AAACAMi8rK0srV65Ux44dFRkZWdrpAFZJT0/Xu+++q8DAQF29erW00wEAAICTeZR2AgAAAIA9rFu3Tj169LBpjJeXl4Oygb3ExMRYtF2/fl3nz5/Xnj179PnnnysuLs782JkzZzR06FCFhITw+qJUjBo1Sh988IFFe0pKik6fPq2dO3dq+fLlunz5svmxw4cP68EHH1RQUJAzUwUAAEApo0ADAACAcsHPz09NmjQp7TRgZwW9pq1atdJdd92lZ555Ro888oi++uor82NRUVF6//33tWDBAidl6XgrV67UypUrnXa+Xbt2Oe1c5U316tULfN926NBBw4YN0/PPP69Ro0bpf//7n/mxbdu2aevWrRo2bJiTMgUAAEBpY4kzAAAAAGVW5cqVtWLFCnXv3t3Q/s9//lM5OTmllBVQuLp16+q7776Tt7e3od2ZRTgAAACUPgo0AAAAAMo0Dw8PvfLKK4a2K1eu6ODBg6WUEVC02rVra9KkSYa2HTt2lFI2AAAAKA0scQYAAADkIyoqSmFhYYqLi9O1a9fk5uam2rVry9/fX927d5ePj49T80lJSdEff/yhsLAwJSUlKT09XZUrV5aXl5caN26sVq1aqVmzZsU+vslk0uHDhxUeHq6LFy8qNTVVdevWVcOGDdW7d2/VqFHDjs/G/gYMGCB3d3fDXTPHjx+3uLMmr+zsbO3fv19RUVG6ePGicnJy5OPjoyZNmigwMFCVKlUqUV6nT5/WkSNHdOrUKSUnJysnJ0dVq1Y1n6Njx46qWbNmic5xK0tJSdFvv/2m+Ph4Xbx4Ue7u7vL19VXbtm3VtWtXVajg2t9JzLtv1qVLl5SRkaHKlStbfYzExEQdP35cERERSkxMVEZGhry8vFSnTh3ddtttatu2rdzc3OyderElJiYqODhY58+f16VLl1S5cmX5+PjotttuU/v27Us7PQAAAKeiQAMAAABISk1N1ZYtW7Rp0ybt2rVLCQkJhfbv2rWrnnnmGY0bN07u7u4Oy+vIkSNasGCBfvzxR2VmZhba18fHRwMHDtT06dPVt29fq45/+vRpvfXWW/rmm2906dKlfPt4enpq4MCBev3113X77bfb/BycoWrVqqpTp47hdSvo+UhSXFycXn/9dX377be6evVqgce85557NH/+fLVt29bqXHJzc7V8+XL985//1JEjRwrt6+bmpnbt2mnEiBF6+umn5evrm2+/yZMna9WqVeY4JibGYp+TJk2aKC4uzmLsqlWrDGPzWrFihSZPnmxo69evn3799VdzbDKZLMaNGDFCW7ZsMce//PKLBg4cWOB58mMymdSyZUtFRUVJkipUqKC4uDg1bNiw0HFBQUF69913tWfPHmVlZeXbp27dupo6dapeeOEF1a5d26a8nCW/vBITE+Xv71/ouP379+vrr7/WL7/8omPHjuX7+txQp04dTZs2TbNnz5afn1+hx7Xne+hmJpNJGzZs0KJFi/T7778rNzc3334NGjTQjBkzNHPmTFWpUqXQXAEAAMoD1/46EQAAAOAk48eP17hx4/T1118XWZyRpJCQEE2YMEGDBw/WxYsXHZLTe++9p27dumnTpk1FFmck6eLFi1q3bp2++OILq47/7rvvqmXLlvr0008LLWZkZWVp69atuvPOO/X8888XejG4NFmb17/+9S+1bt1a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/PFHc9y3b18NGzbM6vGjR49WQECAOf7hhx/skldhYmNjLX5Onjyp3bt365133lHbtm0t9sNp0qSJxRJxeZeSevnll1WtWrUiz+/u7q433njD0GbN/jvXrl1TRkZGkf3Kg7yFFWuWazt69KgOHjxojgMDAy2WpLvh008/1fXr183x3LlzbSpQPPvss+b/vn79un7++WerxxbHqlWr5ObmZvFTvXp1tW3bVk888YTCwsIMYx588EGH7utUtWpVw2d9//79FnvZ2NPHH39siN966y1VqGDd5Qd3d3fNmjXLHF+8eFF79+61a34AAACugj1oAAAAUC6sW7dOPXr0sLp/QXu55JWbm6vU1FQlJycbLhLf4O3tbf5G/okTJ6w+f2HatGljiN9++20NHz7c6pwLsn37dkM8duxYm8a7ubmpb9+++ve//y3pr4u8169fz3cvC3tp2rSpTf39/f0VFBSkWrVqmduysrJ04MABc+zh4aFx48ZZfcyhQ4fKx8dHFy9elCTFxMQoPj5e/v7+hn5t2rQx3zWQlZWl559/XosXL7ZqT5GybMyYMZo5c6auXr0q6a+7lT788MMC90WRLIs406ZNK7Dvzfv6uLu723xHWe/eveXh4aHs7GxJ0u7duzV58mSbjuEoAwcO1KxZs3Tvvffa5XgZGRlKTk5WWlqaTCaT4bGb93FJTk7WmTNn1LhxY7ucN6+b5xo/Pz/17dvXpvH9+/c3xLt377bpjjQAAICyggINAAAAygU/Pz+blynLT2pqqrZs2aLvv/9eR44cUUREhPnCblGuXLlS4vNLUseOHdWxY0f9+eefkv7aPLtNmzaaPHmyRo8erR49esjDw/Z/yu/Zs8cQ+/r6KjY21qZj3HznQkZGhuLj4+3yey+pG0WXxYsXy9vb2/BYaGio0tPTzXH79u3l5eVl9bHd3d3VvXt3bdmyxdz2+++/6/777zf0Gz9+vBYuXGiOlyxZol9//VVTp07ViBEjbC42lRVVqlTR+PHj9emnn0qSkpKS9O233+qhhx7Kt//169cNS2zVqFFDDz74YL59MzIydOjQIXPcqFEjXbp0ybDxvDVq1aplHhMVFWXTWEe6evWq4a40W+3fv18bN27U3r17FRoaai6SWePKlSsOKdBERUUZlhNs0aKFxbKNRclbDHel1wwAAMCeKNAAAAAA/8+yZcv08ssvm++UsJUtF0eL8vnnn6t///7mZbKuXr2qxYsXa/HixapWrZq6d++unj17qnfv3urVq5fh2/EFOX36tCG29U6E/CQmJjq9QOPh4aGaNWuqTp066tSpk3r27Klx48ZZ3NFyQ94l4lq1amXzOdu0aWMo0OS37Nztt9+u2bNna9GiRea2o0ePatasWZo1a5YaNWqkwMBABQYG6q677lLnzp3Lzd0106ZNMxdopL/2lymoQPPdd9/p8uXL5njcuHEFLjd3/vx5ZWVlmePY2NgSF7oSExNLNL4oo0aN0gcffGBoy8rK0oULF7R3714tW7ZMJ0+elPRXoa9Xr1765Zdf1L17d6vPcezYMT355JP63//+V+w87Tlf3SzvPLNnzx6Xf80AAABKCwUaAAAAQNLTTz9tuLBeHPbc06FHjx767bffNG3aNB0+fNjwWGpqqnbs2KEdO3ZIkipVqqShQ4fqqaee0sCBAws85s0Xxe0lOTnZ7se8Wd5lmooj751NNWvWtPkYeccUdMH4o48+UkBAgObNm2dxAfz06dPasGGDNmzYIElq0KCBxo0bp9mzZ6thw4Y25+RKunXrps6dO+uPP/6QJO3cuVPR0dFq1qyZRd+8y5vl3cPmZmXxPVu9evV8i5YtW7ZU7969NXv2bD366KPmPWeSk5N1//336/Dhw6pfv36Rx9+zZ4+GDx9e4ufhqD1oyuJrBgAAUFqs26UPAAAAKMc2btxoUZxp3769FixYoKCgIIWHhyspKUkZGRkymUyGn5IsT1SUrl276tChQ9q2bZumTJlS4HJEmZmZ+v777zVo0CDde++9BV4gzW8PnZKyRwHF0fLmaI+7Vgo7xuzZsxUXF6dPPvlEgwcPLvDukLNnz+rDDz9UixYttHjx4hLnVNpuLrSYTCatWLHCos+pU6cM+5N06NCh0DtHyuN71tPTU8uWLTMUUy9cuKBHH320yLHXrl3Tgw8+aChY1KxZU9OnT9e6det0+PBhXbhwQampqcrJyTHMVXPnznXI88mrPL5mAAAAjsIdNAAAALjl5b1wuWDBAs2ZM8eqC/nXrl1zVFqS/ioEDBo0SIMGDZL0110Y+/bt0+7du7Vjxw6FhoYa+v/4448aPny4fvvtN4t9aurWrWteWkmS4uPjrfrGflmXd0+a4iztlHdM7dq1C+1fs2ZNPfbYY3rssceUnZ2to0ePau/evdq9e7d++eUXwx04mZmZmj17ttzc3DRz5kybc3MVEyZM0PPPP29elm/lypWaP3++KlT4/78XuGLFCsOdG4XdPSP99Z692eDBgxUUFGTHrEuHu7u7vvzyS7Vr106pqamSpC1btmjLli269957Cxz36aefGvZ36d69u/7zn//Ix8enyHM6eq66Ie9r9uijj+qzzz5zyrkBAADKGu6gAQAAwC0tIiJCJ06cMMd33XWXXnnlFauKM+np6UpKSnJgdpYaNWqkMWPG6OOPP9axY8d08uRJPfnkk4aL4AcOHDAvn3SzevXqGeKbizXlma+vryEuzvMODw8v9JiF8fDwUNeuXfXkk09q/fr1SkhI0E8//aQ77rjD0G/OnDlOfz/ZU+3atfXAAw+Y4zNnzmjbtm3m2GQyGd6XFStW1IQJEwo9Znl+zzZu3FjPPvusoe2ll14qdOmx77//3vzfbm5uWrt2rVXFGemvgqwzlOfXDAAAwN4o0AAAAOCWFhERYYgL+/Z6Xnv37i31pXdatmyppUuX6p133jG0b9682aJvYGCgIb754nl51r59e1WpUsUcHzt2zKa7CXJycrR//35DW97iii3c3d01bNgw7d69W126dDG3p6Sk6Jdffin2cW+wxxJuxTVt2jRDfPN+M//9738VGxtrjkeOHGlxt0VeXl5eat++vTmOjY21+MyWZc8995zhDq9jx46Z9yjKz83PvW3btvnu8VOQvXv3Wt23JO+h9u3bG/Zs2rt3L3vIAAAAFIACDQAAAG5pee9YsGUD+fzuUikteZeKiomJsegzZMgQQ7x69WrzclTlmaenp+68805znJ2dra+//trq8du2bVNCQoI5btq0qfz9/UucV6VKlSzuIMnvdSvOcW+WmZlZ4mNaq3///oaiwQ8//KBLly5JMhZrpKKXN7sh7/v2iy++KGGWrqNGjRp65plnDG3z589XTk5Ovv1vnq9smat27NihU6dOWd2/JO8hd3d33X333Yaxq1evtno8AADArYQCDQAAAG5pefcSCQsLs2rcwYMHtX79ekekVCx595vJe4FVkjp27Ki+ffua49OnT+utt95yeG6uYOLEiYb4rbfeUlpaWpHjcnJy9MorrxjaJk2aZLe8rHndbFWrVi1DfPOeJY7m5uamhx9+2Bxfv35dq1ev1pUrVwx3dQUEBGjgwIFWHfPx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",
      "text/plain": [
       "<Figure size 1800x1200 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.metrics import roc_curve, auc\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Compute the probability scores for each class\n",
    "rf_probabilities = rf_classifier.predict_proba(combined_features_test)\n",
    "rf_probabilities = rf_probabilities[:, 1]  # Considering the positive class probabilities\n",
    "\n",
    "# Compute the false positive rate (FPR), true positive rate (TPR), and threshold values\n",
    "fpr, tpr, thresholds = roc_curve(y_test, rf_probabilities)\n",
    "\n",
    "# Compute the Area Under the ROC Curve (AUC)\n",
    "roc_auc = auc(fpr, tpr)\n",
    "\n",
    "# Plot the ROC curve\n",
    "plt.figure(figsize=(6, 4),dpi=300)\n",
    "plt.plot(fpr, tpr, label='XGBoost (AUC = %0.2f)' % roc_auc,lw=4)\n",
    "plt.plot([0, 1], [0, 1], 'k--')  # Plot the diagonal line for random guessing\n",
    "plt.xlim([0.0, 1.0])\n",
    "plt.ylim([0.0, 1.05])\n",
    "plt.xlabel('False Positive Rate')\n",
    "plt.ylabel('True Positive Rate')\n",
    "plt.title('Receiver Operating Characteristic (ROC) Curve')\n",
    "plt.legend(loc='lower right')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "e4669a47",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-07-07T09:52:35.416729Z",
     "iopub.status.busy": "2023-07-07T09:52:35.416335Z",
     "iopub.status.idle": "2023-07-07T09:52:38.843909Z",
     "shell.execute_reply": "2023-07-07T09:52:38.841936Z"
    },
    "papermill": {
     "duration": 3.451759,
     "end_time": "2023-07-07T09:52:38.849539",
     "exception": false,
     "start_time": "2023-07-07T09:52:35.397780",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Explained Variance Ratio: [0.01831002 0.01528909 0.00869867 0.00731196 0.00591481 0.00585255\n",
      " 0.00421557 0.00385041 0.00328837 0.00301755 0.0027694  0.00263674\n",
      " 0.00252755 0.00248251 0.0023421  0.00230196 0.0022292  0.00215449\n",
      " 0.00209503 0.00206498 0.00202476 0.00199036 0.00195766 0.00192119\n",
      " 0.00190108 0.00186086 0.00185484 0.00183719 0.00181624 0.00181206\n",
      " 0.00179992 0.00178198 0.00177659 0.001739   0.00173442 0.00172741\n",
      " 0.00171785 0.00170099 0.00169491 0.00169001 0.0016749  0.00166203\n",
      " 0.00164847 0.00164389 0.00162906 0.00161511 0.00160567 0.00159698\n",
      " 0.00158998 0.0015813  0.00156955 0.00156215 0.00155017 0.00153837\n",
      " 0.00152768 0.00152426 0.00150978 0.00149365 0.0014831  0.00147833]\n",
      "Cumulative Explained Variance Ratio: [0.01831002 0.03359911 0.04229778 0.04960974 0.05552454 0.0613771\n",
      " 0.06559267 0.06944308 0.07273146 0.075749   0.07851841 0.08115515\n",
      " 0.08368269 0.0861652  0.0885073  0.09080926 0.09303846 0.09519295\n",
      " 0.09728798 0.09935296 0.10137772 0.10336808 0.10532575 0.10724693\n",
      " 0.10914801 0.11100887 0.11286371 0.11470089 0.11651713 0.11832919\n",
      " 0.12012911 0.12191109 0.12368768 0.12542668 0.1271611  0.12888851\n",
      " 0.13060636 0.13230735 0.13400226 0.13569227 0.13736717 0.1390292\n",
      " 0.14067767 0.14232155 0.14395062 0.14556573 0.1471714  0.14876838\n",
      " 0.15035836 0.15193966 0.15350921 0.15507136 0.15662153 0.1581599\n",
      " 0.15968758 0.16121184 0.16272163 0.16421528 0.16569838 0.1671767 ]\n"
     ]
    }
   ],
   "source": [
    "\n",
    "from sklearn.decomposition import PCA\n",
    "\n",
    "# Create a PCA object\n",
    "pca = PCA(n_components=60)  # Specify the desired number of components\n",
    "\n",
    "# Apply PCA on the combined feature set\n",
    "combined_features_train_pca = pca.fit_transform(combined_features_train)\n",
    "combined_features_test_pca = pca.transform(combined_features_test)\n",
    "\n",
    "# Print the explained variance ratio\n",
    "print(\"Explained Variance Ratio:\", pca.explained_variance_ratio_)\n",
    "\n",
    "# Print the cumulative explained variance ratio\n",
    "print(\"Cumulative Explained Variance Ratio:\", np.cumsum(pca.explained_variance_ratio_))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "3dc03960",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-07-07T09:52:38.929846Z",
     "iopub.status.busy": "2023-07-07T09:52:38.928977Z",
     "iopub.status.idle": "2023-07-07T09:52:40.793516Z",
     "shell.execute_reply": "2023-07-07T09:52:40.792205Z"
    },
    "papermill": {
     "duration": 1.909118,
     "end_time": "2023-07-07T09:52:40.796548",
     "exception": false,
     "start_time": "2023-07-07T09:52:38.887430",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.8136363636363636\n"
     ]
    }
   ],
   "source": [
    "\n",
    "import xgboost as xgb\n",
    "from sklearn.metrics import accuracy_score\n",
    "\n",
    "# Create an XGBoost classifier\n",
    "xgb_classifier = xgb.XGBClassifier()\n",
    "\n",
    "# Train the XGBoost classifier on the PCA-selected features\n",
    "xgb_classifier.fit(combined_features_train_pca, y_train)\n",
    "\n",
    "# Make predictions on the test data\n",
    "predictions = xgb_classifier.predict(combined_features_test_pca)\n",
    "\n",
    "# Calculate the accuracy of the predictions\n",
    "accuracy = accuracy_score(y_test, predictions)\n",
    "print(\"Accuracy:\", accuracy)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "58b19828",
   "metadata": {
    "papermill": {
     "duration": 0.016867,
     "end_time": "2023-07-07T09:52:40.831248",
     "exception": false,
     "start_time": "2023-07-07T09:52:40.814381",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.10"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 796.84116,
   "end_time": "2023-07-07T09:52:42.679455",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2023-07-07T09:39:25.838295",
   "version": "2.4.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
